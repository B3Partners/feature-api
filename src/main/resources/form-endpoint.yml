openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /features/{application}/{featuretype}/{fid}:
    put:
      tags:
      - feature-controller
      operationId: update
      parameters:
      - name: application
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: featuretype
        in: path
        required: true
        schema:
          type: string
      - name: fid
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feature'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
    delete:
      tags:
      - feature-controller
      operationId: delete
      parameters:
      - name: application
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: featuretype
        in: path
        required: true
        schema:
          type: string
      - name: fid
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
  /features/updatebulk/{application}/{featureType}:
    put:
      tags:
      - feature-controller
      operationId: updateBulk
      parameters:
      - name: application
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: featureType
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpdateBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
  /features/{application}/{featuretype}:
    post:
      tags:
      - feature-controller
      operationId: save
      parameters:
      - name: parentId
        in: query
        required: false
        schema:
          type: string
      - name: application
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: featuretype
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feature'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
  /features/removerelation/{application}/{featureType}:
    post:
      tags:
      - feature-controller
      operationId: removeRelation
      parameters:
      - name: application
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: featureType
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveRelationBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
  /features/by-id/{application}/{featureType}:
    post:
      tags:
      - feature-controller
      operationId: getFeaturesForIds
      parameters:
      - name: application
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: featureType
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feature'
  /collection:
    post:
      tags:
      - collections-controller
      operationId: add
      parameters:
      - name: X-Remote-User
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModel'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
  /features/{image}:
    get:
      tags:
      - feature-controller
      operationId: getImage
      parameters:
      - name: image
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /features/{application}/{x}/{y}/{scale}:
    get:
      tags:
      - feature-controller
      operationId: onPoint
      parameters:
      - name: application
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: x
        in: path
        required: true
        schema:
          type: number
          format: double
      - name: "y"
        in: path
        required: true
        schema:
          type: number
          format: double
      - name: scale
        in: path
        required: true
        schema:
          type: number
          format: double
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feature'
  /features/{application}/{featureTypes}/{x}/{y}/{scale}:
    get:
      tags:
      - feature-controller
      operationId: featuretypeOnPoint
      parameters:
      - name: application
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: featureTypes
        in: path
        required: true
        schema:
          type: array
          items:
            type: string
      - name: x
        in: path
        required: true
        schema:
          type: number
          format: double
      - name: "y"
        in: path
        required: true
        schema:
          type: number
          format: double
      - name: scale
        in: path
        required: true
        schema:
          type: number
          format: double
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feature'
  /features/info/{appId}/{featureTypes}:
    get:
      tags:
      - feature-controller
      operationId: featuretypeInformation
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: featureTypes
        in: path
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeaturetypeMetadata'
  /attributes/{ids}:
    get:
      tags:
      - attribute-controller
      operationId: attributes
      parameters:
      - name: ids
        in: path
        required: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attribuut'
components:
  schemas:
    Feature:
      type: object
      properties:
        layerName:
          type: string
        tableName:
          type: string
        relations:
          type: array
          items:
            $ref: '#/components/schemas/Relation'
        children:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Field'
        defaultGeometry:
          type: string
        fid:
          type: string
        defaultGeometryField:
          type: string
    Field:
      type: object
      properties:
        type:
          type: string
        key:
          type: string
        value:
          type: object
    Relation:
      type: object
      properties:
        filter:
          type: string
        foreignFeatureTypeId:
          type: integer
          format: int64
        foreignFeatureTypeName:
          type: string
        columnName:
          type: string
        columnType:
          type: string
        foreignColumnName:
          type: string
        foreignColumnType:
          type: string
        searchNextRelation:
          type: boolean
        canCreateNewRelation:
          type: boolean
    BulkUpdateBody:
      type: object
      properties:
        filter:
          type: string
        useSQLFiltering:
          type: boolean
        updatedFields:
          type: object
          additionalProperties:
            type: string
    RemoveRelationBody:
      type: object
      properties:
        featureId:
          type: string
        relationColumn:
          type: string
    CollectionModel:
      type: object
      properties:
        naam:
          type: string
        omschrijving:
          type: string
        retentie:
          type: integer
          format: int32
        application:
          type: integer
          format: int64
        layers:
          type: array
          items:
            $ref: '#/components/schemas/LayerModel'
    LayerModel:
      type: object
      properties:
        featureTypeName:
          type: string
        stringFilter:
          type: string
        alias:
          type: string
        userlayer_original_layername:
          type: string
        userlayer_original_feature_type_name:
          type: string
    FeaturetypeMetadata:
      type: object
      properties:
        featuretypeName:
          type: string
        geometryAttribute:
          type: string
        geometryType:
          type: string
          enum:
          - LINESTRING
          - MULTILINESTRING
          - POINT
          - MULTIPOINT
          - POLYGON
          - MULTIPOLYGON
          - GEOMETRY
    Attribuut:
      type: object
      properties:
        id:
          type: integer
          format: int64
        naam:
          type: string
        kolom_naam:
          type: string
        object_naam:
          type: string
        tabel_naam:
          type: string
        muteerbaar:
          type: boolean
        domein:
          $ref: '#/components/schemas/Domein'
    Domein:
      type: object
      properties:
        id:
          type: integer
          format: int64
        naam:
          type: string
        leeg_toestaan:
          type: boolean
        waardes:
          type: array
          items:
            $ref: '#/components/schemas/Domeinwaarde'
        parent:
          $ref: '#/components/schemas/Domein'
        linkedDomains:
          type: array
          items:
            $ref: '#/components/schemas/Domein'
    Domeinwaarde:
      type: object
      properties:
        id:
          type: integer
          format: int64
        waarde:
          type: string
        afkorting:
          type: string
        synoniem:
          type: string
        volgorde:
          type: number
          format: double
        domein_id:
          type: integer
          format: int32
        linkedDomeinwaardes:
          type: array
          items:
            $ref: '#/components/schemas/Domeinwaarde'
